[{"stream_name":"stdout","time":0.600025467,"data":"================================================================================\n"}
,{"stream_name":"stdout","time":0.600071842,"data":"ARZ-RL VALIDATION: SECTION_7_6_RL_PERFORMANCE\n"}
,{"stream_name":"stdout","time":0.600077459,"data":"Revendications: R5\n"}
,{"stream_name":"stdout","time":0.600081643,"data":"================================================================================\n"}
,{"stream_name":"stdout","time":0.600085495,"data":"Repository: https://github.com/elonmj/Code-traffic-flow.git\n"}
,{"stream_name":"stdout","time":0.600089557,"data":"Branch: main\n"}
,{"stream_name":"stdout","time":5.491710202,"data":"Python: 3.11.13 (main, Jun  4 2025, 08:57:29) [GCC 11.4.0]\n"}
,{"stream_name":"stdout","time":5.491880346,"data":"PyTorch: 2.6.0+cu124\n"}
,{"stream_name":"stdout","time":5.53959515,"data":"CUDA available: True\n"}
,{"stream_name":"stdout","time":5.560885787,"data":"CUDA device: Tesla P100-PCIE-16GB\n"}
,{"stream_name":"stdout","time":5.560990698,"data":"CUDA version: 12.4\n"}
,{"stream_name":"stdout","time":5.561098379,"data":"\n"}
,{"stream_name":"stdout","time":5.561113276,"data":"[STEP 1/4] Cloning repository from GitHub...\n"}
,{"stream_name":"stdout","time":5.561294114,"data":"Command: git clone --single-branch --branch main --depth 1 https://github.com/elonmj/Code-traffic-flow.git /kaggle/working/Code-traffic-flow\n"}
,{"stream_name":"stdout","time":8.226527222,"data":"[OK] Repository cloned successfully\n"}
,{"stream_name":"stdout","time":8.22659442,"data":"TRACKING_SUCCESS: Repository cloned\n"}
,{"stream_name":"stdout","time":8.226699954,"data":"\n"}
,{"stream_name":"stdout","time":8.226706436,"data":"[STEP 2/4] Installing dependencies...\n"}
,{"stream_name":"stdout","time":8.226800606,"data":"Installing PyYAML...\n"}
,{"stream_name":"stdout","time":12.10564172,"data":"Installing matplotlib...\n"}
,{"stream_name":"stdout","time":15.099425394,"data":"Installing pandas...\n"}
,{"stream_name":"stdout","time":18.080357907,"data":"Installing scipy...\n"}
,{"stream_name":"stdout","time":21.049124452,"data":"Installing numpy...\n"}
,{"stream_name":"stdout","time":23.980397395,"data":"[OK] Dependencies installed\n"}
,{"stream_name":"stdout","time":23.980427292,"data":"TRACKING_SUCCESS: Dependencies ready\n"}
,{"stream_name":"stdout","time":23.980433876,"data":"\n"}
,{"stream_name":"stdout","time":23.980439871,"data":"[STEP 3/4] Running validation tests...\n"}
,{"stream_name":"stdout","time":23.980445016,"data":"Executing Python module: validation_ch7.scripts.test_section_7_6_rl_performance...\n"}
,{"stream_name":"stdout","time":23.980455,"data":"PYTHONPATH=/kaggle/working/Code-traffic-flow:/kaggle/working/Code-traffic-flow/arz_model:/kaggle/working/Code-traffic-flow/validation_ch7/scripts\n"}
,{"stream_name":"stdout","time":23.98051941,"data":"============================================================\n"}
,{"stream_name":"stdout","time":60.096043379,"data":"[TEST] [ARCHITECTURE] Structure créée: validation_output/results/local_test/section_7_6_rl_performance\n"}
,{"stream_name":"stdout","time":60.096192828,"data":"[TEST]   - Figures:   validation_output/results/local_test/section_7_6_rl_performance/figures\n"}
,{"stream_name":"stdout","time":60.096493792,"data":"[TEST]   - NPZ:       validation_output/results/local_test/section_7_6_rl_performance/data/npz\n"}
,{"stream_name":"stdout","time":60.096522045,"data":"[TEST]   - Scenarios: validation_output/results/local_test/section_7_6_rl_performance/data/scenarios\n"}
,{"stream_name":"stdout","time":60.096639216,"data":"[TEST]   - Metrics:   validation_output/results/local_test/section_7_6_rl_performance/data/metrics\n"}
,{"stream_name":"stdout","time":60.096673553,"data":"[TEST]   - LaTeX:     validation_output/results/local_test/section_7_6_rl_performance/latex\n"}
,{"stream_name":"stdout","time":60.096800207,"data":"[TEST] === Section 7.6: RL Performance Validation ===\n"}
,{"stream_name":"stdout","time":60.096815734,"data":"[TEST] Testing RL agent performance vs baseline controllers...\n"}
,{"stream_name":"stdout","time":60.09690776,"data":"[TEST] [DEVICE] Detected: GPU\n"}
,{"stream_name":"stdout","time":60.096963816,"data":"[TEST] [GPU INFO] Tesla P100-PCIE-16GB\n"}
,{"stream_name":"stdout","time":60.097040588,"data":"[TEST] \n"}
,{"stream_name":"stdout","time":60.097132943,"data":"[TEST] [PHASE 1/2] Training RL agents...\n"}
,{"stream_name":"stdout","time":60.097192608,"data":"[TEST] \n"}
,{"stream_name":"stdout","time":60.097273553,"data":"[TEST] [TRAINING] Starting RL training for scenario: traffic_light_control\n"}
,{"stream_name":"stdout","time":60.09734942,"data":"[TEST]   Device: gpu\n"}
,{"stream_name":"stdout","time":60.09741627,"data":"[TEST]   Total timesteps: 20000\n"}
,{"stream_name":"stdout","time":60.09752099,"data":"[TEST]   [SCENARIO] Generated: traffic_light_control.yml\n"}
,{"stream_name":"stdout","time":60.097570014,"data":"[TEST] DEBUG PARAMS: Reading K_m_kmh = 10.0\n"}
,{"stream_name":"stdout","time":60.097674331,"data":"[TEST] DEBUG PARAMS: Reading K_c_kmh = 15.0\n"}
,{"stream_name":"stdout","time":60.097731351,"data":"[TEST] DEBUG PARAMS: Assigned self.K_m = 2.7777777777777777\n"}
,{"stream_name":"stdout","time":60.097806842,"data":"[TEST] DEBUG PARAMS: Assigned self.K_c = 4.166666666666667\n"}
,{"stream_name":"stdout","time":60.097869676,"data":"[TEST]   [INFO] Environment created: obs_space=(26,), action_space=2\n"}
,{"stream_name":"stdout","time":60.097953905,"data":"[TEST]   [INFO] Initializing PPO agent...\n"}
,{"stream_name":"stdout","time":60.098032029,"data":"[TEST] Using cuda device\n"}
,{"stream_name":"stdout","time":60.098137881,"data":"[TEST] Wrapping the env with a `Monitor` wrapper\n"}
,{"stream_name":"stdout","time":60.098226956,"data":"[TEST] Wrapping the env in a DummyVecEnv.\n"}
,{"stream_name":"stdout","time":60.09829729,"data":"[TEST]   [INFO] Training for 20000 timesteps...\n"}
,{"stream_name":"stdout","time":60.098351265,"data":"[TEST] DEBUG PARAMS: Reading K_m_kmh = 10.0\n"}
,{"stream_name":"stdout","time":60.098432454,"data":"[TEST] DEBUG PARAMS: Reading K_c_kmh = 15.0\n"}
,{"stream_name":"stdout","time":60.098499958,"data":"[TEST] DEBUG PARAMS: Assigned self.K_m = 2.7777777777777777\n"}
,{"stream_name":"stdout","time":60.098559293,"data":"[TEST] DEBUG PARAMS: Assigned self.K_c = 4.166666666666667\n"}
,{"stream_name":"stdout","time":60.09864183,"data":"[TEST] Logging to validation_output/results/local_test/section_7_6_rl_performance/data/models/tensorboard/PPO_1\n"}
,{"stream_name":"stdout","time":60.098717491,"data":"[TEST] [WARNING] Automatic CFL correction applied (count: 1):\n"}
,{"stream_name":"stdout","time":60.098806282,"data":"[TEST]   Calculated CFL: 0.800 \u003e Limit: 0.500\n"}
,{"stream_name":"stdout","time":60.098833224,"data":"[TEST]   Original dt: 1.028839e+00 s\n"}
,{"stream_name":"stdout","time":60.09895117,"data":"[TEST]   Corrected dt: 6.430243e-01 s\n"}
,{"stream_name":"stdout","time":60.099000038,"data":"[TEST]   Correction factor: 1.6x\n"}
,{"stream_name":"stdout","time":60.099195857,"data":"[TEST]   Max wave speed detected: 19.44 m/s\n"}
,{"stream_name":"stdout","time":60.099203594,"data":"[TEST] [ERROR] Training failed: list indices must be integers or slices, not str\n"}
,{"stream_name":"stdout","time":60.09929681,"data":"[TEST] \n"}
,{"stream_name":"stdout","time":60.099348164,"data":"[TEST] [TRAINING] Starting RL training for scenario: ramp_metering\n"}
,{"stream_name":"stdout","time":60.09943423,"data":"[TEST]   Device: gpu\n"}
,{"stream_name":"stdout","time":60.099497547,"data":"[TEST]   Total timesteps: 20000\n"}
,{"stream_name":"stdout","time":60.099571243,"data":"[TEST]   [SCENARIO] Generated: ramp_metering.yml\n"}
,{"stream_name":"stdout","time":60.099644447,"data":"[TEST] DEBUG PARAMS: Reading K_m_kmh = 10.0\n"}
,{"stream_name":"stdout","time":60.099728718,"data":"[TEST] DEBUG PARAMS: Reading K_c_kmh = 15.0\n"}
,{"stream_name":"stdout","time":60.09978091,"data":"[TEST] DEBUG PARAMS: Assigned self.K_m = 2.7777777777777777\n"}
,{"stream_name":"stdout","time":60.099867344,"data":"[TEST] DEBUG PARAMS: Assigned self.K_c = 4.166666666666667\n"}
,{"stream_name":"stdout","time":60.099923629,"data":"[TEST]   [INFO] Environment created: obs_space=(26,), action_space=2\n"}
,{"stream_name":"stdout","time":60.100016315,"data":"[TEST]   [INFO] Initializing PPO agent...\n"}
,{"stream_name":"stdout","time":60.100098282,"data":"[TEST] Using cuda device\n"}
,{"stream_name":"stdout","time":60.10016477,"data":"[TEST] Wrapping the env with a `Monitor` wrapper\n"}
,{"stream_name":"stdout","time":60.10026175,"data":"[TEST] Wrapping the env in a DummyVecEnv.\n"}
,{"stream_name":"stdout","time":60.100305078,"data":"[TEST]   [INFO] Training for 20000 timesteps...\n"}
,{"stream_name":"stdout","time":60.100389446,"data":"[TEST] DEBUG PARAMS: Reading K_m_kmh = 10.0\n"}
,{"stream_name":"stdout","time":60.100479784,"data":"[TEST] DEBUG PARAMS: Reading K_c_kmh = 15.0\n"}
,{"stream_name":"stdout","time":60.100548277,"data":"[TEST] DEBUG PARAMS: Assigned self.K_m = 2.7777777777777777\n"}
,{"stream_name":"stdout","time":60.100621592,"data":"[TEST] DEBUG PARAMS: Assigned self.K_c = 4.166666666666667\n"}
,{"stream_name":"stdout","time":60.100680587,"data":"[TEST] Logging to validation_output/results/local_test/section_7_6_rl_performance/data/models/tensorboard/PPO_2\n"}
,{"stream_name":"stdout","time":60.100749526,"data":"[TEST] [ERROR] Training failed: list indices must be integers or slices, not str\n"}
,{"stream_name":"stdout","time":60.100825442,"data":"[TEST] \n"}
,{"stream_name":"stdout","time":60.100893477,"data":"[TEST] [TRAINING] Starting RL training for scenario: adaptive_speed_control\n"}
,{"stream_name":"stdout","time":60.100978634,"data":"[TEST]   Device: gpu\n"}
,{"stream_name":"stdout","time":60.10106177,"data":"[TEST]   Total timesteps: 20000\n"}
,{"stream_name":"stdout","time":60.101154106,"data":"[TEST]   [SCENARIO] Generated: adaptive_speed_control.yml\n"}
,{"stream_name":"stdout","time":60.10122151,"data":"[TEST] DEBUG PARAMS: Reading K_m_kmh = 10.0\n"}
,{"stream_name":"stdout","time":60.101285145,"data":"[TEST] DEBUG PARAMS: Reading K_c_kmh = 15.0\n"}
,{"stream_name":"stdout","time":60.10133304,"data":"[TEST] DEBUG PARAMS: Assigned self.K_m = 2.7777777777777777\n"}
,{"stream_name":"stdout","time":60.101407087,"data":"[TEST] DEBUG PARAMS: Assigned self.K_c = 4.166666666666667\n"}
,{"stream_name":"stdout","time":60.1014687,"data":"[TEST]   [INFO] Environment created: obs_space=(26,), action_space=2\n"}
,{"stream_name":"stdout","time":60.101556833,"data":"[TEST]   [INFO] Initializing PPO agent...\n"}
,{"stream_name":"stdout","time":60.101629935,"data":"[TEST] Using cuda device\n"}
,{"stream_name":"stdout","time":60.101694035,"data":"[TEST] Wrapping the env with a `Monitor` wrapper\n"}
,{"stream_name":"stdout","time":60.101767841,"data":"[TEST] Wrapping the env in a DummyVecEnv.\n"}
,{"stream_name":"stdout","time":60.101831487,"data":"[TEST]   [INFO] Training for 20000 timesteps...\n"}
,{"stream_name":"stdout","time":60.101889345,"data":"[TEST] DEBUG PARAMS: Reading K_m_kmh = 10.0\n"}
,{"stream_name":"stdout","time":60.101983701,"data":"[TEST] DEBUG PARAMS: Reading K_c_kmh = 15.0\n"}
,{"stream_name":"stdout","time":60.10206557,"data":"[TEST] DEBUG PARAMS: Assigned self.K_m = 2.7777777777777777\n"}
,{"stream_name":"stdout","time":60.102252415,"data":"[TEST] DEBUG PARAMS: Assigned self.K_c = 4.166666666666667\n"}
,{"stream_name":"stdout","time":60.102309517,"data":"[TEST] Logging to validation_output/results/local_test/section_7_6_rl_performance/data/models/tensorboard/PPO_3\n"}
,{"stream_name":"stdout","time":60.102406604,"data":"[TEST] [ERROR] Training failed: list indices must be integers or slices, not str\n"}
,{"stream_name":"stdout","time":60.102503942,"data":"[TEST] \n"}
,{"stream_name":"stdout","time":60.102585652,"data":"[TEST] [PHASE 2/2] Running performance comparisons...\n"}
,{"stream_name":"stdout","time":60.102676108,"data":"[TEST] \n"}
,{"stream_name":"stdout","time":60.102746691,"data":"[TEST] Testing scenario: traffic_light_control (device=gpu)\n"}
,{"stream_name":"stdout","time":60.102841025,"data":"[TEST]   [SCENARIO] Generated: traffic_light_control.yml\n"}
,{"stream_name":"stdout","time":60.102930917,"data":"[TEST]   Running baseline controller...\n"}
,{"stream_name":"stdout","time":60.103030864,"data":"[TEST]   [INFO] Initializing TrafficSignalEnvDirect with device=gpu\n"}
,{"stream_name":"stdout","time":60.103142549,"data":"[TEST] DEBUG PARAMS: Reading K_m_kmh = 10.0\n"}
,{"stream_name":"stdout","time":60.103220816,"data":"[TEST] DEBUG PARAMS: Reading K_c_kmh = 15.0\n"}
,{"stream_name":"stdout","time":60.103313993,"data":"[TEST] DEBUG PARAMS: Assigned self.K_m = 2.7777777777777777\n"}
,{"stream_name":"stdout","time":60.10346223,"data":"[TEST] DEBUG PARAMS: Assigned self.K_c = 4.166666666666667\n"}
,{"stream_name":"stdout","time":60.103484892,"data":"[TEST] DEBUG PARAMS: Reading K_m_kmh = 10.0\n"}
,{"stream_name":"stdout","time":60.103571628,"data":"[TEST] DEBUG PARAMS: Reading K_c_kmh = 15.0\n"}
,{"stream_name":"stdout","time":60.103643854,"data":"[TEST] DEBUG PARAMS: Assigned self.K_m = 2.7777777777777777\n"}
,{"stream_name":"stdout","time":60.103708144,"data":"[TEST] DEBUG PARAMS: Assigned self.K_c = 4.166666666666667\n"}
,{"stream_name":"stdout","time":60.103789765,"data":"[TEST]   [INFO] Starting simulation loop (max duration: 3600.0s, interval: 60.0s)\n"}
,{"stream_name":"stdout","time":60.103859299,"data":"[TEST]   ERROR: list indices must be integers or slices, not str\n"}
,{"stream_name":"stdout","time":60.10393644,"data":"[TEST] \n"}
,{"stream_name":"stdout","time":60.103997051,"data":"[TEST] Testing scenario: ramp_metering (device=gpu)\n"}
,{"stream_name":"stdout","time":60.104091297,"data":"[TEST]   [SCENARIO] Generated: ramp_metering.yml\n"}
,{"stream_name":"stdout","time":60.104157321,"data":"[TEST]   Running baseline controller...\n"}
,{"stream_name":"stdout","time":60.104233309,"data":"[TEST]   [INFO] Initializing TrafficSignalEnvDirect with device=gpu\n"}
,{"stream_name":"stdout","time":60.104297027,"data":"[TEST] DEBUG PARAMS: Reading K_m_kmh = 10.0\n"}
,{"stream_name":"stdout","time":60.104375591,"data":"[TEST] DEBUG PARAMS: Reading K_c_kmh = 15.0\n"}
,{"stream_name":"stdout","time":60.104459205,"data":"[TEST] DEBUG PARAMS: Assigned self.K_m = 2.7777777777777777\n"}
,{"stream_name":"stdout","time":60.104528425,"data":"[TEST] DEBUG PARAMS: Assigned self.K_c = 4.166666666666667\n"}
,{"stream_name":"stdout","time":60.104605565,"data":"[TEST] DEBUG PARAMS: Reading K_m_kmh = 10.0\n"}
,{"stream_name":"stdout","time":60.104687741,"data":"[TEST] DEBUG PARAMS: Reading K_c_kmh = 15.0\n"}
,{"stream_name":"stdout","time":60.104731901,"data":"[TEST] DEBUG PARAMS: Assigned self.K_m = 2.7777777777777777\n"}
,{"stream_name":"stdout","time":60.104806781,"data":"[TEST] DEBUG PARAMS: Assigned self.K_c = 4.166666666666667\n"}
,{"stream_name":"stdout","time":60.104876146,"data":"[TEST]   [INFO] Starting simulation loop (max duration: 3600.0s, interval: 60.0s)\n"}
,{"stream_name":"stdout","time":60.104929223,"data":"[TEST]   ERROR: list indices must be integers or slices, not str\n"}
,{"stream_name":"stdout","time":60.105020052,"data":"[TEST] \n"}
,{"stream_name":"stdout","time":60.105084336,"data":"[TEST] Testing scenario: adaptive_speed_control (device=gpu)\n"}
,{"stream_name":"stdout","time":60.105160778,"data":"[TEST]   [SCENARIO] Generated: adaptive_speed_control.yml\n"}
,{"stream_name":"stdout","time":60.105221022,"data":"[TEST]   Running baseline controller...\n"}
,{"stream_name":"stdout","time":60.105301066,"data":"[TEST]   [INFO] Initializing TrafficSignalEnvDirect with device=gpu\n"}
,{"stream_name":"stdout","time":60.105370447,"data":"[TEST] DEBUG PARAMS: Reading K_m_kmh = 10.0\n"}
,{"stream_name":"stdout","time":60.105449932,"data":"[TEST] DEBUG PARAMS: Reading K_c_kmh = 15.0\n"}
,{"stream_name":"stdout","time":60.105513716,"data":"[TEST] DEBUG PARAMS: Assigned self.K_m = 2.7777777777777777\n"}
,{"stream_name":"stdout","time":60.105588586,"data":"[TEST] DEBUG PARAMS: Assigned self.K_c = 4.166666666666667\n"}
,{"stream_name":"stdout","time":60.105668322,"data":"[TEST] DEBUG PARAMS: Reading K_m_kmh = 10.0\n"}
,{"stream_name":"stdout","time":60.10573474,"data":"[TEST] DEBUG PARAMS: Reading K_c_kmh = 15.0\n"}
,{"stream_name":"stdout","time":60.105817302,"data":"[TEST] DEBUG PARAMS: Assigned self.K_m = 2.7777777777777777\n"}
,{"stream_name":"stdout","time":60.105877717,"data":"[TEST] DEBUG PARAMS: Assigned self.K_c = 4.166666666666667\n"}
,{"stream_name":"stdout","time":60.105957364,"data":"[TEST]   [INFO] Starting simulation loop (max duration: 3600.0s, interval: 60.0s)\n"}
,{"stream_name":"stdout","time":60.106029447,"data":"[TEST]   ERROR: list indices must be integers or slices, not str\n"}
,{"stream_name":"stdout","time":60.106130227,"data":"[TEST] \n"}
,{"stream_name":"stdout","time":60.106209515,"data":"[TEST] [FIGURES] Generating RL performance figures...\n"}
,{"stream_name":"stdout","time":60.106251317,"data":"[TEST]   [OK] fig_rl_performance_improvements.png\n"}
,{"stream_name":"stdout","time":60.10633432,"data":"[TEST]   [OK] fig_rl_learning_curve.png\n"}
,{"stream_name":"stdout","time":60.106374537,"data":"[TEST] [FIGURES] Generated 2 figures in validation_output/results/local_test/section_7_6_rl_performance/figures\n"}
,{"stream_name":"stdout","time":60.106464152,"data":"[TEST] \n"}
,{"stream_name":"stdout","time":60.106519813,"data":"[TEST] [METRICS] Saving RL performance metrics...\n"}
,{"stream_name":"stdout","time":60.106603307,"data":"[TEST]   [OK] validation_output/results/local_test/section_7_6_rl_performance/data/metrics/rl_performance_comparison.csv\n"}
,{"stream_name":"stdout","time":60.106660382,"data":"[TEST] \n"}
,{"stream_name":"stdout","time":60.106742385,"data":"[TEST] [LATEX] Generating content for Section 7.6...\n"}
,{"stream_name":"stdout","time":60.106800938,"data":"[TEST] \n"}
,{"stream_name":"stdout","time":60.106881696,"data":"[TEST] [CRITICAL ERROR] An unhandled exception occurred: 'Validation de la Performance des Agents RL (Section 7'\n"}
,{"stream_name":"stdout","time":60.107063659,"data":"[STDERR] 2025-10-07 14:03:02.578203: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:477] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered\n"}
,{"stream_name":"stdout","time":60.107226454,"data":"[STDERR] WARNING: All log messages before absl::InitializeLog() is called are written to STDERR\n"}
,{"stream_name":"stdout","time":60.107232655,"data":"[STDERR] E0000 00:00:1759845782.766700      46 cuda_dnn.cc:8310] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered\n"}
,{"stream_name":"stdout","time":60.10732657,"data":"[STDERR] E0000 00:00:1759845782.821778      46 cuda_blas.cc:1418] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered\n"}
,{"stream_name":"stdout","time":60.107381041,"data":"[STDERR] /usr/local/lib/python3.11/dist-packages/numba_cuda/numba/cuda/dispatcher.py:579: NumbaPerformanceWarning: \u001b[1mGrid size 1 will likely result in GPU under-utilization due to low occupancy.\u001b[0m\n"}
,{"stream_name":"stdout","time":60.107459182,"data":"[STDERR]   warn(NumbaPerformanceWarning(msg))\n"}
,{"stream_name":"stdout","time":60.107524281,"data":"[STDERR] /usr/local/lib/python3.11/dist-packages/numba_cuda/numba/cuda/dispatcher.py:579: NumbaPerformanceWarning: \u001b[1mGrid size 1 will likely result in GPU under-utilization due to low occupancy.\u001b[0m\n"}
,{"stream_name":"stdout","time":60.107593203,"data":"[STDERR]   warn(NumbaPerformanceWarning(msg))\n"}
,{"stream_name":"stdout","time":60.107677409,"data":"[STDERR] /usr/local/lib/python3.11/dist-packages/numba_cuda/numba/cuda/dispatcher.py:579: NumbaPerformanceWarning: \u001b[1mGrid size 1 will likely result in GPU under-utilization due to low occupancy.\u001b[0m\n"}
,{"stream_name":"stdout","time":60.107720336,"data":"[STDERR]   warn(NumbaPerformanceWarning(msg))\n"}
,{"stream_name":"stdout","time":60.107813572,"data":"[STDERR] /usr/local/lib/python3.11/dist-packages/numba_cuda/numba/cuda/dispatcher.py:579: NumbaPerformanceWarning: \u001b[1mGrid size 1 will likely result in GPU under-utilization due to low occupancy.\u001b[0m\n"}
,{"stream_name":"stdout","time":60.107870145,"data":"[STDERR]   warn(NumbaPerformanceWarning(msg))\n"}
,{"stream_name":"stdout","time":60.107950128,"data":"[STDERR] /usr/local/lib/python3.11/dist-packages/numba_cuda/numba/cuda/dispatcher.py:579: NumbaPerformanceWarning: \u001b[1mGrid size 1 will likely result in GPU under-utilization due to low occupancy.\u001b[0m\n"}
,{"stream_name":"stdout","time":60.108016849,"data":"[STDERR]   warn(NumbaPerformanceWarning(msg))\n"}
,{"stream_name":"stdout","time":60.10809595,"data":"[STDERR] Traceback (most recent call last):\n"}
,{"stream_name":"stdout","time":60.108156881,"data":"[STDERR]   File \"/kaggle/working/Code-traffic-flow/validation_ch7/scripts/test_section_7_6_rl_performance.py\", line 363, in train_rl_agent\n"}
,{"stream_name":"stdout","time":60.108235296,"data":"[STDERR]     model.learn(total_timesteps=total_timesteps)\n"}
,{"stream_name":"stdout","time":60.108300087,"data":"[STDERR]   File \"/usr/local/lib/python3.11/dist-packages/stable_baselines3/ppo/ppo.py\", line 308, in learn\n"}
,{"stream_name":"stdout","time":60.108379789,"data":"[STDERR]     return super().learn(\n"}
,{"stream_name":"stdout","time":60.108455689,"data":"[STDERR]            ^^^^^^^^^^^^^^\n"}
,{"stream_name":"stdout","time":60.108522307,"data":"[STDERR]   File \"/usr/local/lib/python3.11/dist-packages/stable_baselines3/common/on_policy_algorithm.py\", line 259, in learn\n"}
,{"stream_name":"stdout","time":60.108602105,"data":"[STDERR]     continue_training = self.collect_rollouts(self.env, callback, self.rollout_buffer, n_rollout_steps=self.n_steps)\n"}
,{"stream_name":"stdout","time":60.108663664,"data":"[STDERR]                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n"}
,{"stream_name":"stdout","time":60.108741342,"data":"[STDERR]   File \"/usr/local/lib/python3.11/dist-packages/stable_baselines3/common/on_policy_algorithm.py\", line 178, in collect_rollouts\n"}
,{"stream_name":"stdout","time":60.108802027,"data":"[STDERR]     new_obs, rewards, dones, infos = env.step(clipped_actions)\n"}
,{"stream_name":"stdout","time":60.108883605,"data":"[STDERR]                                      ^^^^^^^^^^^^^^^^^^^^^^^^^\n"}
,{"stream_name":"stdout","time":60.108944257,"data":"[STDERR]   File \"/usr/local/lib/python3.11/dist-packages/stable_baselines3/common/vec_env/base_vec_env.py\", line 197, in step\n"}
,{"stream_name":"stdout","time":60.109030947,"data":"[STDERR]     return self.step_wait()\n"}
,{"stream_name":"stdout","time":60.109111742,"data":"[STDERR]            ^^^^^^^^^^^^^^^^\n"}
,{"stream_name":"stdout","time":60.109168614,"data":"[STDERR]   File \"/usr/local/lib/python3.11/dist-packages/stable_baselines3/common/vec_env/dummy_vec_env.py\", line 58, in step_wait\n"}
,{"stream_name":"stdout","time":60.109247774,"data":"[STDERR]     obs, self.buf_rews[env_idx], terminated, truncated, self.buf_infos[env_idx] = self.envs[env_idx].step(\n"}
,{"stream_name":"stdout","time":60.109330558,"data":"[STDERR]                                                                                   ^^^^^^^^^^^^^^^^^^^^^^^^\n"}
,{"stream_name":"stdout","time":60.109391666,"data":"[STDERR]   File \"/usr/local/lib/python3.11/dist-packages/stable_baselines3/common/monitor.py\", line 94, in step\n"}
,{"stream_name":"stdout","time":60.109478966,"data":"[STDERR]     observation, reward, terminated, truncated, info = self.env.step(action)\n"}
,{"stream_name":"stdout","time":60.109543832,"data":"[STDERR]                                                        ^^^^^^^^^^^^^^^^^^^^^\n"}
,{"stream_name":"stdout","time":60.109614769,"data":"[STDERR]   File \"/kaggle/working/Code-traffic-flow/Code_RL/src/env/traffic_signal_env_direct.py\", line 226, in step\n"}
,{"stream_name":"stdout","time":60.109686572,"data":"[STDERR]     self.runner.run(t_final=target_time, output_dt=self.decision_interval)\n"}
,{"stream_name":"stdout","time":60.109760792,"data":"[STDERR]   File \"/kaggle/working/Code-traffic-flow/arz_model/simulation/runner.py\", line 543, in run\n"}
,{"stream_name":"stdout","time":60.109841094,"data":"[STDERR]     self.d_U = time_integration.strang_splitting_step(self.d_U, dt, self.grid, self.params, d_R=self.d_R)\n"}
,{"stream_name":"stdout","time":60.109899738,"data":"[STDERR]                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n"}
,{"stream_name":"stdout","time":60.109972909,"data":"[STDERR]   File \"/kaggle/working/Code-traffic-flow/arz_model/numerics/time_integration.py\", line 414, in strang_splitting_step\n"}
,{"stream_name":"stdout","time":60.11005828,"data":"[STDERR]     d_U_ss = solve_hyperbolic_step_ssprk3_gpu(d_U_star, dt, grid, params)\n"}
,{"stream_name":"stdout","time":60.110134566,"data":"[STDERR]              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n"}
,{"stream_name":"stdout","time":60.110200829,"data":"[STDERR]   File \"/kaggle/working/Code-traffic-flow/arz_model/numerics/time_integration.py\", line 760, in solve_hyperbolic_step_ssprk3_gpu\n"}
,{"stream_name":"stdout","time":60.11027611,"data":"[STDERR]     integrator.integrate_step(d_U_physical, d_U_result, dt_hyp, compute_spatial_discretization_gpu_callback)\n"}
,{"stream_name":"stdout","time":60.110339671,"data":"[STDERR]   File \"/kaggle/working/Code-traffic-flow/arz_model/numerics/gpu/ssp_rk3_cuda.py\", line 140, in integrate_step\n"}
,{"stream_name":"stdout","time":60.110421319,"data":"[STDERR]     compute_flux_divergence_func(u_n_device, self.flux_div_device)\n"}
,{"stream_name":"stdout","time":60.110500577,"data":"[STDERR]   File \"/kaggle/working/Code-traffic-flow/arz_model/numerics/time_integration.py\", line 721, in compute_spatial_discretization_gpu_callback\n"}
,{"stream_name":"stdout","time":60.110570127,"data":"[STDERR]     boundary_conditions.apply_boundary_conditions_gpu(d_U_extended, grid, params)\n"}
,{"stream_name":"stdout","time":60.110638948,"data":"[STDERR]   File \"/kaggle/working/Code-traffic-flow/arz_model/numerics/boundary_conditions.py\", line 433, in apply_boundary_conditions_gpu\n"}
,{"stream_name":"stdout","time":60.110713327,"data":"[STDERR]     inflow_L_0, inflow_L_1, inflow_L_2, inflow_L_3 = inflow_L['rho_m'], inflow_L['w_m'], inflow_L['rho_c'], inflow_L['w_c']\n"}
,{"stream_name":"stdout","time":60.110778917,"data":"[STDERR]                                                      ~~~~~~~~^^^^^^^^^\n"}
,{"stream_name":"stdout","time":60.110865457,"data":"[STDERR] TypeError: list indices must be integers or slices, not str\n"}
,{"stream_name":"stdout","time":60.110917767,"data":"[STDERR] /usr/local/lib/python3.11/dist-packages/numba_cuda/numba/cuda/dispatcher.py:579: NumbaPerformanceWarning: \u001b[1mGrid size 1 will likely result in GPU under-utilization due to low occupancy.\u001b[0m\n"}
,{"stream_name":"stdout","time":60.1109801,"data":"[STDERR]   warn(NumbaPerformanceWarning(msg))\n"}
,{"stream_name":"stdout","time":60.111063167,"data":"[STDERR] Traceback (most recent call last):\n"}
,{"stream_name":"stdout","time":60.111142226,"data":"[STDERR]   File \"/kaggle/working/Code-traffic-flow/validation_ch7/scripts/test_section_7_6_rl_performance.py\", line 363, in train_rl_agent\n"}
,{"stream_name":"stdout","time":60.111203827,"data":"[STDERR]     model.learn(total_timesteps=total_timesteps)\n"}
,{"stream_name":"stdout","time":60.111282178,"data":"[STDERR]   File \"/usr/local/lib/python3.11/dist-packages/stable_baselines3/ppo/ppo.py\", line 308, in learn\n"}
,{"stream_name":"stdout","time":60.111343322,"data":"[STDERR]     return super().learn(\n"}
,{"stream_name":"stdout","time":60.111423642,"data":"[STDERR]            ^^^^^^^^^^^^^^\n"}
,{"stream_name":"stdout","time":60.111499008,"data":"[STDERR]   File \"/usr/local/lib/python3.11/dist-packages/stable_baselines3/common/on_policy_algorithm.py\", line 259, in learn\n"}
,{"stream_name":"stdout","time":60.111571173,"data":"[STDERR]     continue_training = self.collect_rollouts(self.env, callback, self.rollout_buffer, n_rollout_steps=self.n_steps)\n"}
,{"stream_name":"stdout","time":60.11163494,"data":"[STDERR]                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n"}
,{"stream_name":"stdout","time":60.111702022,"data":"[STDERR]   File \"/usr/local/lib/python3.11/dist-packages/stable_baselines3/common/on_policy_algorithm.py\", line 178, in collect_rollouts\n"}
,{"stream_name":"stdout","time":60.11177783,"data":"[STDERR]     new_obs, rewards, dones, infos = env.step(clipped_actions)\n"}
,{"stream_name":"stdout","time":60.111850637,"data":"[STDERR]                                      ^^^^^^^^^^^^^^^^^^^^^^^^^\n"}
,{"stream_name":"stdout","time":60.111918364,"data":"[STDERR]   File \"/usr/local/lib/python3.11/dist-packages/stable_baselines3/common/vec_env/base_vec_env.py\", line 197, in step\n"}
,{"stream_name":"stdout","time":60.111989691,"data":"[STDERR]     return self.step_wait()\n"}
,{"stream_name":"stdout","time":60.112069428,"data":"[STDERR]            ^^^^^^^^^^^^^^^^\n"}
,{"stream_name":"stdout","time":60.112147899,"data":"[STDERR]   File \"/usr/local/lib/python3.11/dist-packages/stable_baselines3/common/vec_env/dummy_vec_env.py\", line 58, in step_wait\n"}
,{"stream_name":"stdout","time":60.11221483,"data":"[STDERR]     obs, self.buf_rews[env_idx], terminated, truncated, self.buf_infos[env_idx] = self.envs[env_idx].step(\n"}
,{"stream_name":"stdout","time":60.112293133,"data":"[STDERR]                                                                                   ^^^^^^^^^^^^^^^^^^^^^^^^\n"}
,{"stream_name":"stdout","time":60.112352392,"data":"[STDERR]   File \"/usr/local/lib/python3.11/dist-packages/stable_baselines3/common/monitor.py\", line 94, in step\n"}
,{"stream_name":"stdout","time":60.112444688,"data":"[STDERR]     observation, reward, terminated, truncated, info = self.env.step(action)\n"}
,{"stream_name":"stdout","time":60.112503971,"data":"[STDERR]                                                        ^^^^^^^^^^^^^^^^^^^^^\n"}
,{"stream_name":"stdout","time":60.112583723,"data":"[STDERR]   File \"/kaggle/working/Code-traffic-flow/Code_RL/src/env/traffic_signal_env_direct.py\", line 226, in step\n"}
,{"stream_name":"stdout","time":60.112651683,"data":"[STDERR]     self.runner.run(t_final=target_time, output_dt=self.decision_interval)\n"}
,{"stream_name":"stdout","time":60.112733196,"data":"[STDERR]   File \"/kaggle/working/Code-traffic-flow/arz_model/simulation/runner.py\", line 543, in run\n"}
,{"stream_name":"stdout","time":60.112793046,"data":"[STDERR]     self.d_U = time_integration.strang_splitting_step(self.d_U, dt, self.grid, self.params, d_R=self.d_R)\n"}
,{"stream_name":"stdout","time":60.112871848,"data":"[STDERR]                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n"}
,{"stream_name":"stdout","time":60.112932332,"data":"[STDERR]   File \"/kaggle/working/Code-traffic-flow/arz_model/numerics/time_integration.py\", line 414, in strang_splitting_step\n"}
,{"stream_name":"stdout","time":60.113020482,"data":"[STDERR]     d_U_ss = solve_hyperbolic_step_ssprk3_gpu(d_U_star, dt, grid, params)\n"}
,{"stream_name":"stdout","time":60.113089422,"data":"[STDERR]              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n"}
,{"stream_name":"stdout","time":60.113170257,"data":"[STDERR]   File \"/kaggle/working/Code-traffic-flow/arz_model/numerics/time_integration.py\", line 760, in solve_hyperbolic_step_ssprk3_gpu\n"}
,{"stream_name":"stdout","time":60.113232289,"data":"[STDERR]     integrator.integrate_step(d_U_physical, d_U_result, dt_hyp, compute_spatial_discretization_gpu_callback)\n"}
,{"stream_name":"stdout","time":60.113310165,"data":"[STDERR]   File \"/kaggle/working/Code-traffic-flow/arz_model/numerics/gpu/ssp_rk3_cuda.py\", line 140, in integrate_step\n"}
,{"stream_name":"stdout","time":60.113370736,"data":"[STDERR]     compute_flux_divergence_func(u_n_device, self.flux_div_device)\n"}
,{"stream_name":"stdout","time":60.11345221,"data":"[STDERR]   File \"/kaggle/working/Code-traffic-flow/arz_model/numerics/time_integration.py\", line 721, in compute_spatial_discretization_gpu_callback\n"}
,{"stream_name":"stdout","time":60.113515406,"data":"[STDERR]     boundary_conditions.apply_boundary_conditions_gpu(d_U_extended, grid, params)\n"}
,{"stream_name":"stdout","time":60.113595499,"data":"[STDERR]   File \"/kaggle/working/Code-traffic-flow/arz_model/numerics/boundary_conditions.py\", line 433, in apply_boundary_conditions_gpu\n"}
,{"stream_name":"stdout","time":60.113654562,"data":"[STDERR]     inflow_L_0, inflow_L_1, inflow_L_2, inflow_L_3 = inflow_L['rho_m'], inflow_L['w_m'], inflow_L['rho_c'], inflow_L['w_c']\n"}
,{"stream_name":"stdout","time":60.113737789,"data":"[STDERR]                                                      ~~~~~~~~^^^^^^^^^\n"}
,{"stream_name":"stdout","time":60.113799526,"data":"[STDERR] TypeError: list indices must be integers or slices, not str\n"}
,{"stream_name":"stdout","time":60.113877795,"data":"[STDERR] Traceback (most recent call last):\n"}
,{"stream_name":"stdout","time":60.113939432,"data":"[STDERR]   File \"/kaggle/working/Code-traffic-flow/validation_ch7/scripts/test_section_7_6_rl_performance.py\", line 363, in train_rl_agent\n"}
,{"stream_name":"stdout","time":60.114027559,"data":"[STDERR]     model.learn(total_timesteps=total_timesteps)\n"}
,{"stream_name":"stdout","time":60.114101248,"data":"[STDERR]   File \"/usr/local/lib/python3.11/dist-packages/stable_baselines3/ppo/ppo.py\", line 308, in learn\n"}
,{"stream_name":"stdout","time":60.114172026,"data":"[STDERR]     return super().learn(\n"}
,{"stream_name":"stdout","time":60.114252428,"data":"[STDERR]            ^^^^^^^^^^^^^^\n"}
,{"stream_name":"stdout","time":60.114326635,"data":"[STDERR]   File \"/usr/local/lib/python3.11/dist-packages/stable_baselines3/common/on_policy_algorithm.py\", line 259, in learn\n"}
,{"stream_name":"stdout","time":60.11439176,"data":"[STDERR]     continue_training = self.collect_rollouts(self.env, callback, self.rollout_buffer, n_rollout_steps=self.n_steps)\n"}
,{"stream_name":"stdout","time":60.114477106,"data":"[STDERR]                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n"}
,{"stream_name":"stdout","time":60.114533247,"data":"[STDERR]   File \"/usr/local/lib/python3.11/dist-packages/stable_baselines3/common/on_policy_algorithm.py\", line 178, in collect_rollouts\n"}
,{"stream_name":"stdout","time":60.114601744,"data":"[STDERR]     new_obs, rewards, dones, infos = env.step(clipped_actions)\n"}
,{"stream_name":"stdout","time":60.114668456,"data":"[STDERR]                                      ^^^^^^^^^^^^^^^^^^^^^^^^^\n"}
,{"stream_name":"stdout","time":60.114730323,"data":"[STDERR]   File \"/usr/local/lib/python3.11/dist-packages/stable_baselines3/common/vec_env/base_vec_env.py\", line 197, in step\n"}
,{"stream_name":"stdout","time":60.114792895,"data":"[STDERR]     return self.step_wait()\n"}
,{"stream_name":"stdout","time":60.114861754,"data":"[STDERR]            ^^^^^^^^^^^^^^^^\n"}
,{"stream_name":"stdout","time":60.114926556,"data":"[STDERR]   File \"/usr/local/lib/python3.11/dist-packages/stable_baselines3/common/vec_env/dummy_vec_env.py\", line 58, in step_wait\n"}
,{"stream_name":"stdout","time":60.114992704,"data":"[STDERR]     obs, self.buf_rews[env_idx], terminated, truncated, self.buf_infos[env_idx] = self.envs[env_idx].step(\n"}
,{"stream_name":"stdout","time":60.115093537,"data":"[STDERR]                                                                                   ^^^^^^^^^^^^^^^^^^^^^^^^\n"}
,{"stream_name":"stdout","time":60.115185691,"data":"[STDERR]   File \"/usr/local/lib/python3.11/dist-packages/stable_baselines3/common/monitor.py\", line 94, in step\n"}
,{"stream_name":"stdout","time":60.115227108,"data":"[STDERR]     observation, reward, terminated, truncated, info = self.env.step(action)\n"}
,{"stream_name":"stdout","time":60.11531165,"data":"[STDERR]                                                        ^^^^^^^^^^^^^^^^^^^^^\n"}
,{"stream_name":"stdout","time":60.115378266,"data":"[STDERR]   File \"/kaggle/working/Code-traffic-flow/Code_RL/src/env/traffic_signal_env_direct.py\", line 226, in step\n"}
,{"stream_name":"stdout","time":60.115464215,"data":"[STDERR]     self.runner.run(t_final=target_time, output_dt=self.decision_interval)\n"}
,{"stream_name":"stdout","time":60.115524617,"data":"[STDERR]   File \"/kaggle/working/Code-traffic-flow/arz_model/simulation/runner.py\", line 543, in run\n"}
,{"stream_name":"stdout","time":60.115601599,"data":"[STDERR]     self.d_U = time_integration.strang_splitting_step(self.d_U, dt, self.grid, self.params, d_R=self.d_R)\n"}
,{"stream_name":"stdout","time":60.115669391,"data":"[STDERR]                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n"}
,{"stream_name":"stdout","time":60.115745493,"data":"[STDERR]   File \"/kaggle/working/Code-traffic-flow/arz_model/numerics/time_integration.py\", line 414, in strang_splitting_step\n"}
,{"stream_name":"stdout","time":60.115817888,"data":"[STDERR]     d_U_ss = solve_hyperbolic_step_ssprk3_gpu(d_U_star, dt, grid, params)\n"}
,{"stream_name":"stdout","time":60.115893124,"data":"[STDERR]              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n"}
,{"stream_name":"stdout","time":60.115962303,"data":"[STDERR]   File \"/kaggle/working/Code-traffic-flow/arz_model/numerics/time_integration.py\", line 760, in solve_hyperbolic_step_ssprk3_gpu\n"}
,{"stream_name":"stdout","time":60.116044112,"data":"[STDERR]     integrator.integrate_step(d_U_physical, d_U_result, dt_hyp, compute_spatial_discretization_gpu_callback)\n"}
,{"stream_name":"stdout","time":60.116127011,"data":"[STDERR]   File \"/kaggle/working/Code-traffic-flow/arz_model/numerics/gpu/ssp_rk3_cuda.py\", line 140, in integrate_step\n"}
,{"stream_name":"stdout","time":60.116196685,"data":"[STDERR]     compute_flux_divergence_func(u_n_device, self.flux_div_device)\n"}
,{"stream_name":"stdout","time":60.116276314,"data":"[STDERR]   File \"/kaggle/working/Code-traffic-flow/arz_model/numerics/time_integration.py\", line 721, in compute_spatial_discretization_gpu_callback\n"}
,{"stream_name":"stdout","time":60.116349077,"data":"[STDERR]     boundary_conditions.apply_boundary_conditions_gpu(d_U_extended, grid, params)\n"}
,{"stream_name":"stdout","time":60.116415013,"data":"[STDERR]   File \"/kaggle/working/Code-traffic-flow/arz_model/numerics/boundary_conditions.py\", line 433, in apply_boundary_conditions_gpu\n"}
,{"stream_name":"stdout","time":60.116490046,"data":"[STDERR]     inflow_L_0, inflow_L_1, inflow_L_2, inflow_L_3 = inflow_L['rho_m'], inflow_L['w_m'], inflow_L['rho_c'], inflow_L['w_c']\n"}
,{"stream_name":"stdout","time":60.116567144,"data":"[STDERR]                                                      ~~~~~~~~^^^^^^^^^\n"}
,{"stream_name":"stdout","time":60.116625378,"data":"[STDERR] TypeError: list indices must be integers or slices, not str\n"}
,{"stream_name":"stdout","time":60.116700198,"data":"[STDERR] Traceback (most recent call last):\n"}
,{"stream_name":"stdout","time":60.116782262,"data":"[STDERR]   File \"/kaggle/working/Code-traffic-flow/validation_ch7/scripts/test_section_7_6_rl_performance.py\", line 389, in run_performance_comparison\n"}
,{"stream_name":"stdout","time":60.116843667,"data":"[STDERR]     baseline_states, _ = self.run_control_simulation(\n"}
,{"stream_name":"stdout","time":60.116923706,"data":"[STDERR]                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n"}
,{"stream_name":"stdout","time":60.116984574,"data":"[STDERR]   File \"/kaggle/working/Code-traffic-flow/validation_ch7/scripts/test_section_7_6_rl_performance.py\", line 219, in run_control_simulation\n"}
,{"stream_name":"stdout","time":60.117092353,"data":"[STDERR]     obs, reward, terminated, truncated, info = env.step(action)\n"}
,{"stream_name":"stdout","time":60.1171575,"data":"[STDERR]                                                ^^^^^^^^^^^^^^^^\n"}
,{"stream_name":"stdout","time":60.117234609,"data":"[STDERR]   File \"/kaggle/working/Code-traffic-flow/Code_RL/src/env/traffic_signal_env_direct.py\", line 226, in step\n"}
,{"stream_name":"stdout","time":60.117299598,"data":"[STDERR]     self.runner.run(t_final=target_time, output_dt=self.decision_interval)\n"}
,{"stream_name":"stdout","time":60.117375218,"data":"[STDERR]   File \"/kaggle/working/Code-traffic-flow/arz_model/simulation/runner.py\", line 543, in run\n"}
,{"stream_name":"stdout","time":60.117461714,"data":"[STDERR]     self.d_U = time_integration.strang_splitting_step(self.d_U, dt, self.grid, self.params, d_R=self.d_R)\n"}
,{"stream_name":"stdout","time":60.117521266,"data":"[STDERR]                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n"}
,{"stream_name":"stdout","time":60.117600009,"data":"[STDERR]   File \"/kaggle/working/Code-traffic-flow/arz_model/numerics/time_integration.py\", line 414, in strang_splitting_step\n"}
,{"stream_name":"stdout","time":60.117660647,"data":"[STDERR]     d_U_ss = solve_hyperbolic_step_ssprk3_gpu(d_U_star, dt, grid, params)\n"}
,{"stream_name":"stdout","time":60.117739995,"data":"[STDERR]              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n"}
,{"stream_name":"stdout","time":60.117800033,"data":"[STDERR]   File \"/kaggle/working/Code-traffic-flow/arz_model/numerics/time_integration.py\", line 760, in solve_hyperbolic_step_ssprk3_gpu\n"}
,{"stream_name":"stdout","time":60.117878567,"data":"[STDERR]     integrator.integrate_step(d_U_physical, d_U_result, dt_hyp, compute_spatial_discretization_gpu_callback)\n"}
,{"stream_name":"stdout","time":60.117941078,"data":"[STDERR]   File \"/kaggle/working/Code-traffic-flow/arz_model/numerics/gpu/ssp_rk3_cuda.py\", line 140, in integrate_step\n"}
,{"stream_name":"stdout","time":60.118029485,"data":"[STDERR]     compute_flux_divergence_func(u_n_device, self.flux_div_device)\n"}
,{"stream_name":"stdout","time":60.118101994,"data":"[STDERR]   File \"/kaggle/working/Code-traffic-flow/arz_model/numerics/time_integration.py\", line 721, in compute_spatial_discretization_gpu_callback\n"}
,{"stream_name":"stdout","time":60.118168804,"data":"[STDERR]     boundary_conditions.apply_boundary_conditions_gpu(d_U_extended, grid, params)\n"}
,{"stream_name":"stdout","time":60.118252504,"data":"[STDERR]   File \"/kaggle/working/Code-traffic-flow/arz_model/numerics/boundary_conditions.py\", line 433, in apply_boundary_conditions_gpu\n"}
,{"stream_name":"stdout","time":60.118326577,"data":"[STDERR]     inflow_L_0, inflow_L_1, inflow_L_2, inflow_L_3 = inflow_L['rho_m'], inflow_L['w_m'], inflow_L['rho_c'], inflow_L['w_c']\n"}
,{"stream_name":"stdout","time":60.118392695,"data":"[STDERR]                                                      ~~~~~~~~^^^^^^^^^\n"}
,{"stream_name":"stdout","time":60.118474043,"data":"[STDERR] TypeError: list indices must be integers or slices, not str\n"}
,{"stream_name":"stdout","time":60.11853569,"data":"[STDERR] Traceback (most recent call last):\n"}
,{"stream_name":"stdout","time":60.118615635,"data":"[STDERR]   File \"/kaggle/working/Code-traffic-flow/validation_ch7/scripts/test_section_7_6_rl_performance.py\", line 389, in run_performance_comparison\n"}
,{"stream_name":"stdout","time":60.118675991,"data":"[STDERR]     baseline_states, _ = self.run_control_simulation(\n"}
,{"stream_name":"stdout","time":60.118754051,"data":"[STDERR]                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n"}
,{"stream_name":"stdout","time":60.118815592,"data":"[STDERR]   File \"/kaggle/working/Code-traffic-flow/validation_ch7/scripts/test_section_7_6_rl_performance.py\", line 219, in run_control_simulation\n"}
,{"stream_name":"stdout","time":60.118895374,"data":"[STDERR]     obs, reward, terminated, truncated, info = env.step(action)\n"}
,{"stream_name":"stdout","time":60.118953849,"data":"[STDERR]                                                ^^^^^^^^^^^^^^^^\n"}
,{"stream_name":"stdout","time":60.119036829,"data":"[STDERR]   File \"/kaggle/working/Code-traffic-flow/Code_RL/src/env/traffic_signal_env_direct.py\", line 226, in step\n"}
,{"stream_name":"stdout","time":60.119113769,"data":"[STDERR]     self.runner.run(t_final=target_time, output_dt=self.decision_interval)\n"}
,{"stream_name":"stdout","time":60.11918438,"data":"[STDERR]   File \"/kaggle/working/Code-traffic-flow/arz_model/simulation/runner.py\", line 543, in run\n"}
,{"stream_name":"stdout","time":60.119260378,"data":"[STDERR]     self.d_U = time_integration.strang_splitting_step(self.d_U, dt, self.grid, self.params, d_R=self.d_R)\n"}
,{"stream_name":"stdout","time":60.119356506,"data":"[STDERR]                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n"}
,{"stream_name":"stdout","time":60.119393788,"data":"[STDERR]   File \"/kaggle/working/Code-traffic-flow/arz_model/numerics/time_integration.py\", line 414, in strang_splitting_step\n"}
,{"stream_name":"stdout","time":60.119474524,"data":"[STDERR]     d_U_ss = solve_hyperbolic_step_ssprk3_gpu(d_U_star, dt, grid, params)\n"}
,{"stream_name":"stdout","time":60.119543131,"data":"[STDERR]              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n"}
,{"stream_name":"stdout","time":60.119598965,"data":"[STDERR]   File \"/kaggle/working/Code-traffic-flow/arz_model/numerics/time_integration.py\", line 760, in solve_hyperbolic_step_ssprk3_gpu\n"}
,{"stream_name":"stdout","time":60.119672412,"data":"[STDERR]     integrator.integrate_step(d_U_physical, d_U_result, dt_hyp, compute_spatial_discretization_gpu_callback)\n"}
,{"stream_name":"stdout","time":60.119750796,"data":"[STDERR]   File \"/kaggle/working/Code-traffic-flow/arz_model/numerics/gpu/ssp_rk3_cuda.py\", line 140, in integrate_step\n"}
,{"stream_name":"stdout","time":60.119809084,"data":"[STDERR]     compute_flux_divergence_func(u_n_device, self.flux_div_device)\n"}
,{"stream_name":"stdout","time":60.119884351,"data":"[STDERR]   File \"/kaggle/working/Code-traffic-flow/arz_model/numerics/time_integration.py\", line 721, in compute_spatial_discretization_gpu_callback\n"}
,{"stream_name":"stdout","time":60.119956512,"data":"[STDERR]     boundary_conditions.apply_boundary_conditions_gpu(d_U_extended, grid, params)\n"}
,{"stream_name":"stdout","time":60.120029499,"data":"[STDERR]   File \"/kaggle/working/Code-traffic-flow/arz_model/numerics/boundary_conditions.py\", line 433, in apply_boundary_conditions_gpu\n"}
,{"stream_name":"stdout","time":60.120121852,"data":"[STDERR]     inflow_L_0, inflow_L_1, inflow_L_2, inflow_L_3 = inflow_L['rho_m'], inflow_L['w_m'], inflow_L['rho_c'], inflow_L['w_c']\n"}
,{"stream_name":"stdout","time":60.120196614,"data":"[STDERR]                                                      ~~~~~~~~^^^^^^^^^\n"}
,{"stream_name":"stdout","time":60.12025426,"data":"[STDERR] TypeError: list indices must be integers or slices, not str\n"}
,{"stream_name":"stdout","time":60.120338902,"data":"[STDERR] Traceback (most recent call last):\n"}
,{"stream_name":"stdout","time":60.120400455,"data":"[STDERR]   File \"/kaggle/working/Code-traffic-flow/validation_ch7/scripts/test_section_7_6_rl_performance.py\", line 389, in run_performance_comparison\n"}
,{"stream_name":"stdout","time":60.120470437,"data":"[STDERR]     baseline_states, _ = self.run_control_simulation(\n"}
,{"stream_name":"stdout","time":60.120549778,"data":"[STDERR]                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n"}
,{"stream_name":"stdout","time":60.120620377,"data":"[STDERR]   File \"/kaggle/working/Code-traffic-flow/validation_ch7/scripts/test_section_7_6_rl_performance.py\", line 219, in run_control_simulation\n"}
,{"stream_name":"stdout","time":60.120678339,"data":"[STDERR]     obs, reward, terminated, truncated, info = env.step(action)\n"}
,{"stream_name":"stdout","time":60.120740619,"data":"[STDERR]                                                ^^^^^^^^^^^^^^^^\n"}
,{"stream_name":"stdout","time":60.120810787,"data":"[STDERR]   File \"/kaggle/working/Code-traffic-flow/Code_RL/src/env/traffic_signal_env_direct.py\", line 226, in step\n"}
,{"stream_name":"stdout","time":60.120866032,"data":"[STDERR]     self.runner.run(t_final=target_time, output_dt=self.decision_interval)\n"}
,{"stream_name":"stdout","time":60.120938203,"data":"[STDERR]   File \"/kaggle/working/Code-traffic-flow/arz_model/simulation/runner.py\", line 543, in run\n"}
,{"stream_name":"stdout","time":60.120997235,"data":"[STDERR]     self.d_U = time_integration.strang_splitting_step(self.d_U, dt, self.grid, self.params, d_R=self.d_R)\n"}
,{"stream_name":"stdout","time":60.121088232,"data":"[STDERR]                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n"}
,{"stream_name":"stdout","time":60.12114771,"data":"[STDERR]   File \"/kaggle/working/Code-traffic-flow/arz_model/numerics/time_integration.py\", line 414, in strang_splitting_step\n"}
,{"stream_name":"stdout","time":60.121223867,"data":"[STDERR]     d_U_ss = solve_hyperbolic_step_ssprk3_gpu(d_U_star, dt, grid, params)\n"}
,{"stream_name":"stdout","time":60.121282478,"data":"[STDERR]              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n"}
,{"stream_name":"stdout","time":60.121362316,"data":"[STDERR]   File \"/kaggle/working/Code-traffic-flow/arz_model/numerics/time_integration.py\", line 760, in solve_hyperbolic_step_ssprk3_gpu\n"}
,{"stream_name":"stdout","time":60.121421172,"data":"[STDERR]     integrator.integrate_step(d_U_physical, d_U_result, dt_hyp, compute_spatial_discretization_gpu_callback)\n"}
,{"stream_name":"stdout","time":60.121490447,"data":"[STDERR]   File \"/kaggle/working/Code-traffic-flow/arz_model/numerics/gpu/ssp_rk3_cuda.py\", line 140, in integrate_step\n"}
,{"stream_name":"stdout","time":60.121546369,"data":"[STDERR]     compute_flux_divergence_func(u_n_device, self.flux_div_device)\n"}
,{"stream_name":"stdout","time":60.121623542,"data":"[STDERR]   File \"/kaggle/working/Code-traffic-flow/arz_model/numerics/time_integration.py\", line 721, in compute_spatial_discretization_gpu_callback\n"}
,{"stream_name":"stdout","time":60.121678087,"data":"[STDERR]     boundary_conditions.apply_boundary_conditions_gpu(d_U_extended, grid, params)\n"}
,{"stream_name":"stdout","time":60.121739946,"data":"[STDERR]   File \"/kaggle/working/Code-traffic-flow/arz_model/numerics/boundary_conditions.py\", line 433, in apply_boundary_conditions_gpu\n"}
,{"stream_name":"stdout","time":60.121796443,"data":"[STDERR]     inflow_L_0, inflow_L_1, inflow_L_2, inflow_L_3 = inflow_L['rho_m'], inflow_L['w_m'], inflow_L['rho_c'], inflow_L['w_c']\n"}
,{"stream_name":"stdout","time":60.121867356,"data":"[STDERR]                                                      ~~~~~~~~^^^^^^^^^\n"}
,{"stream_name":"stdout","time":60.121923721,"data":"[STDERR] TypeError: list indices must be integers or slices, not str\n"}
,{"stream_name":"stdout","time":60.12199396,"data":"[STDERR] Traceback (most recent call last):\n"}
,{"stream_name":"stdout","time":60.122072997,"data":"[STDERR]   File \"/kaggle/working/Code-traffic-flow/validation_ch7/scripts/test_section_7_6_rl_performance.py\", line 788, in main\n"}
,{"stream_name":"stdout","time":60.122192639,"data":"[STDERR]     success = test.run_all_tests()\n"}
,{"stream_name":"stdout","time":60.122275724,"data":"[STDERR]               ^^^^^^^^^^^^^^^^^^^^\n"}
,{"stream_name":"stdout","time":60.122341836,"data":"[STDERR]   File \"/kaggle/working/Code-traffic-flow/validation_ch7/scripts/test_section_7_6_rl_performance.py\", line 537, in run_all_tests\n"}
,{"stream_name":"stdout","time":60.122435849,"data":"[STDERR]     self.generate_section_7_6_latex()\n"}
,{"stream_name":"stdout","time":60.122504065,"data":"[STDERR]   File \"/kaggle/working/Code-traffic-flow/validation_ch7/scripts/test_section_7_6_rl_performance.py\", line 762, in generate_section_7_6_latex\n"}
,{"stream_name":"stdout","time":60.122580324,"data":"[STDERR]     latex_content = template.format(**template_vars)\n"}
,{"stream_name":"stdout","time":60.122650661,"data":"[STDERR]                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n"}
,{"stream_name":"stdout","time":60.122732004,"data":"[STDERR] KeyError: 'Validation de la Performance des Agents RL (Section 7'\n"}
,{"stream_name":"stdout","time":60.122811713,"data":"[WARNING] Tests returned code: 1\n"}
,{"stream_name":"stdout","time":60.122897801,"data":"\n"}
,{"stream_name":"stdout","time":60.122904523,"data":"[STEP 4/4] Copying artifacts and cleaning up...\n"}
,{"stream_name":"stdout","time":60.122966849,"data":"[ARTIFACTS] Copying results for section_7_6_rl_performance...\n"}
,{"stream_name":"stdout","time":60.125707978,"data":"[OK] Section copied to: /kaggle/working/section_7_6_rl_performance\n"}
,{"stream_name":"stdout","time":60.126613398,"data":"[ARTIFACTS] NPZ files: 0\n"}
,{"stream_name":"stdout","time":60.126674873,"data":"[ARTIFACTS] PNG figures: 2\n"}
,{"stream_name":"stdout","time":60.126757526,"data":"[ARTIFACTS] YAML scenarios: 3\n"}
,{"stream_name":"stdout","time":60.126853296,"data":"[ARTIFACTS] TEX files: 0\n"}
,{"stream_name":"stdout","time":60.126912526,"data":"[ARTIFACTS] JSON files: 0\n"}
,{"stream_name":"stdout","time":60.126950538,"data":"[ARTIFACTS] CSV metrics: 1\n"}
,{"stream_name":"stdout","time":60.127047887,"data":"TRACKING_SUCCESS: Artifacts copied\n"}
,{"stream_name":"stdout","time":60.127173559,"data":"[SUCCESS] All artifacts organized and copied\n"}
,{"stream_name":"stdout","time":60.127211672,"data":"[CLEANUP] Removing cloned repository: /kaggle/working/Code-traffic-flow\n"}
,{"stream_name":"stdout","time":60.157062465,"data":"[OK] Cleanup completed - only validation results remain\n"}
,{"stream_name":"stdout","time":60.157088852,"data":"TRACKING_SUCCESS: Cleanup completed\n"}
,{"stream_name":"stdout","time":60.157611972,"data":"[OK] Session summary created: /kaggle/working/validation_results/session_summary.json\n"}
,{"stream_name":"stdout","time":60.157661927,"data":"TRACKING_SUCCESS: Session summary created\n"}
,{"stream_name":"stdout","time":60.157752406,"data":"\n"}
,{"stream_name":"stdout","time":60.15776133,"data":"[FINAL] Validation workflow completed\n"}
,{"stream_name":"stdout","time":60.157813622,"data":"Remote logging finalized - ready for download\n"}
,{"stream_name":"stdout","time":60.157957081,"data":"\n"}
,{"stream_name":"stdout","time":60.157968861,"data":"================================================================================\n"}
,{"stream_name":"stdout","time":60.15797325,"data":"VALIDATION SECTION_7_6_RL_PERFORMANCE COMPLETED\n"}
,{"stream_name":"stdout","time":60.157977141,"data":"Output ready at: /kaggle/working/validation_results/\n"}
,{"stream_name":"stdout","time":60.157981306,"data":"================================================================================\n"}
,{"stream_name":"stderr","time":63.801913788,"data":"/usr/local/lib/python3.11/dist-packages/traitlets/traitlets.py:2915: FutureWarning: --Exporter.preprocessors=[\"nbconvert.preprocessors.ExtractOutputPreprocessor\"] for containers is deprecated in traitlets 5.0. You can pass `--Exporter.preprocessors item` ... multiple times to add items to a list.\n"}
,{"stream_name":"stderr","time":63.801971223,"data":"  warn(\n"}
,{"stream_name":"stderr","time":63.84126695,"data":"[NbConvertApp] Converting notebook __script__.ipynb to html\n"}
,{"stream_name":"stderr","time":64.63644962,"data":"[NbConvertApp] Writing 320596 bytes to __results__.html\n"}
]